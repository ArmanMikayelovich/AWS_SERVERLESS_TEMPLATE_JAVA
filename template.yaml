AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  serverless-app
  
    Sample SAM Template for serverless-app
Globals:
  Function:
    Runtime: java11
    MemorySize: 512
    Timeout: 30
    Environment:
      Variables:
        PRODUCTS_TABLE: !Ref ProductsTable

Resources:
  ProductsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
  ProductsQueue:
    Type: AWS::SQS::Queue
  ProductsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-${AWS::AccountId}-${AWS::Region}
  ReadFileLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServerLessApp
      Handler: com.mikayelovich.serverless_app.lambda.ReadFileLambda::handler
      Policies:
        - S3ReadPolicy:
            BucketName: !Sub ${AWS::StackName}-${AWS::AccountId}-${AWS::Region}
        - SQSSendMessagePolicy:
            QueueName: !GetAtt ProductsQueue.QueueName
      Environment:
        Variables:
          PRODUCTS_QUEUE: !Ref ProductsQueue
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref ProductsBucket
            Events: s3:ObjectCreated:*
  SaveProductLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServerLessApp
      Handler: com.mikayelovich.serverless_app.lambda.SaveProductLambda::handler
      Policies:
        - SQSPollerPolicy:
            QueueName:
              !GetAtt ProductsQueue.QueueName
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt ProductsQueue.Arn
            BatchSize: 10
  GetAllProductsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServerLessApp
      Handler: com.mikayelovich.serverless_app.lambda.GetAllProductsLambda::handleRequest
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ProductsTable
      Events:
        GetAllProductsEvent:
          Type: Api
          Properties:
            Path: /products
            Method: GET

Outputs:
  ProductsApi:
    Description: "API Gateway endpoint URL for getting all products function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/products/"
  ReadFileLambdaFunction:
    Description: "Read file Lambda Function ARN"
    Value: !GetAtt ReadFileLambdaFunction.Arn
  SaveProductLambdaFunction:
    Description: "Save product Lambda Function ARN"
    Value: !GetAtt SaveProductLambdaFunction.Arn
  GetAllProductsFunction:
    Description: "Get all products Lambda Function ARN"
    Value: !GetAtt GetAllProductsFunction.Arn